
R Under development (unstable) (2025-09-02 r88766) -- "Unsuffered Consequences"
Copyright (C) 2025 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> 
> library("free1way")
> options(digits = 5)
> set.seed(29)
> 
> N <- 500
> x <- gl(2, N, labels = c("A", "B"))
> y <- rlogis(length(x), location = c(0, 2)[x])
> y <- factor(y < 0)
> 
> ci <- confint(m <- glm(y ~ x, family = binomial()), test = "LRT")
Waiting for profiling to be done...
> c(coef(m)["xB"], ci["xB",])
     xB   2.5 %  97.5 % 
-1.8624 -2.1717 -1.5630 
> ci <- confint(m <- glm(y ~ x, family = binomial()), test = "Rao")
Waiting for profiling to be done...
> c(coef(m)["xB"], ci["xB",])
     xB   2.5 %  97.5 % 
-1.8624 -2.1658 -1.5589 
> 
> ft <- free1way(y = y, groups = x, B = 10000)
> coef(ft)
     xB 
-1.8623 
> print(ft, test = "LRT")

	2-sample Wilcoxon test against proportional odds alternatives

data:  y by x (A, B)
logLR chi-squared = 168, df = 1, p-value <2e-16
alternative hypothesis: true log-odds ratio is not equal to 0

> confint(ft, test = "LRT")
     2.5 % 97.5 %
xB -2.1716 -1.563
> print(ft, test = "Rao")

	2-sample Wilcoxon test against proportional odds alternatives

data:  y by x (A, B)
Rao chi-squared = 160, df = 1, p-value <2e-16
alternative hypothesis: true log-odds ratio is not equal to 0

> confint(ft, test = "Rao")
     2.5 %  97.5 %
xB -2.1658 -1.5589
> print(ft, test = "Wald")

	2-sample Wilcoxon test against proportional odds alternatives

data:  y by x (A, B)
Wald chi-squared = 144, df = 1, p-value <2e-16
alternative hypothesis: true log-odds ratio is not equal to 0

> confint(ft, test = "Wald")
     2.5 %  97.5 %
xB -2.1663 -1.5583
> print(ft, test = "Permutation")

	2-sample Wilcoxon test against proportional odds alternatives

data:  y by x (A, B)
Perm Z = -12.7, p-value = 1e-04
alternative hypothesis: true log-odds ratio is not equal to 0

> confint(ft, test = "Permutation")
     2.5 %  97.5 %
xB -2.1632 -1.5615
attr(,"Attained level")
[1] 0.9348
> 
> y <- relevel(y, levels(y)[2])
> ci <- confint(m <- glm(y ~ x, family = binomial(link = "cloglog")), test = "LRT")
Waiting for profiling to be done...
> c(coef(m)["xB"], ci["xB",])
     xB   2.5 %  97.5 % 
1.09103 0.92226 1.26210 
> ci <- confint(m <- glm(y ~ x, family = binomial(link = "cloglog")), test = "Rao")
Waiting for profiling to be done...
> c(coef(m)["xB"], ci["xB",])
     xB   2.5 %  97.5 % 
1.09103 0.92094 1.26049 
> 
> ft <- free1way(y = y, groups = x, link = "loglog", B = 10000)
> coef(ft)
   xB 
1.091 
> print(ft, test = "LRT")

	2-sample Lehmann test against Lehmann alternatives

data:  y by x (A, B)
logLR chi-squared = 168, df = 1, p-value <2e-16
alternative hypothesis: true log-reverse time hazard ratio is not equal to 0

> confint(ft, test = "LRT")
     2.5 % 97.5 %
xB 0.92226 1.2621
> print(ft, test = "Rao")

	2-sample Lehmann test against Lehmann alternatives

data:  y by x (A, B)
Rao chi-squared = 169, df = 1, p-value <2e-16
alternative hypothesis: true log-reverse time hazard ratio is not equal to 0

> confint(ft, test = "Rao")
     2.5 % 97.5 %
xB 0.92132 1.2607
> print(ft, test = "Wald")

	2-sample Lehmann test against Lehmann alternatives

data:  y by x (A, B)
Wald chi-squared = 159, df = 1, p-value <2e-16
alternative hypothesis: true log-reverse time hazard ratio is not equal to 0

> confint(ft, test = "Wald")
     2.5 % 97.5 %
xB 0.92118 1.2609
> print(ft, test = "Permutation")

	2-sample Lehmann test against Lehmann alternatives

data:  y by x (A, B)
Perm Z = 12.7, p-value = 1e-04
alternative hypothesis: true log-reverse time hazard ratio is not equal to 0

> confint(ft, test = "Permutation")
     2.5 % 97.5 %
xB 0.91809  1.264
attr(,"Attained level")
[1] 0.9403
> 
> proc.time()
   user  system elapsed 
  0.823   0.065   0.884 
