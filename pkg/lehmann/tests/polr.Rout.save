
R version 4.4.3 (2025-02-28) -- "Trophy Case"
Copyright (C) 2025 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> 
> library("lehmann")
> library("MASS")
> library("tram")
Loading required package: mlt
Loading required package: basefun
Loading required package: variables
Loading required package: mvtnorm
> library("coin")
Loading required package: survival

Attaching package: 'coin'

The following object is masked from 'package:variables':

    support

> 
> set.seed(29)
> 
> N <- 500
> x <- gl(2, N, labels = c("A", "B"))
> y <- rlogis(length(x), location = c(0, 2)[x])
> y <- cut(y, breaks = c(-Inf, -1, 0, 1, Inf), ordered = TRUE)
> 
> ci <- confint(m <- polr(y ~ x, method = "logistic"))
Waiting for profiling to be done...

Re-fitting to get Hessian

> c(coef(m)["xB"], ci)
      xB    2.5 %   97.5 % 
1.918767 1.661707 2.180632 
> #score_test(m, parm = "xB")
> 
> m <- Polr(y ~ x, method = "logistic")
> score_test(m, parm = "xB")

	Transformation Score Test

data:  Polr(formula = y ~ x, method = "logistic")
Z = -15.052, p-value < 2.2e-16
alternative hypothesis: true  for xB is not equal to 0
95 percent confidence interval:
 1.659583 2.177948
sample estimates:
  for xB 
1.918773 

> trafo.test(y = y, x = x)

	Semiparametric two-sample inference for proportional odds model

data:  
Wald Z = 14.5, p-value < 2.2e-16
alternative hypothesis: true log-odds ratio is not equal to 0
95 percent confidence interval:
 1.659508 2.178246
sample estimates:
log-odds ratio 
      1.918877 

> trafo.test(y = y, x = x, inference = "MLScore")

	Semiparametric two-sample inference for proportional odds model

data:  
Score Z = -15.052, p-value < 2.2e-16
alternative hypothesis: true log-odds ratio is not equal to 0
95 percent confidence interval:
 1.659583 2.177948
sample estimates:
log-odds ratio 
      1.918877 

> perm_test(m, parm = "xB", distribution = "asymptotic")

	Asymptotic Permutation Transformation Score Test

data:  Polr(formula = y ~ x, method = "logistic")
Z = -14.807, p-value < 2.2e-16
alternative hypothesis: true  for xB is not equal to 0
95 percent confidence interval:
 1.655087 2.182223
sample estimates:
  for xB 
1.918773 

> trafo.test(y = y, x = x, inference = "PermScore")

	Semiparametric two-sample inference for proportional odds model

data:  
Z = 14.807, p-value < 2.2e-16
alternative hypothesis: true log-odds ratio is not equal to 0
95 percent confidence interval:
 1.659583 2.177948
sample estimates:
log-odds ratio 
      1.918877 

> perm_test(m, parm = "xB", distribution = approximate(nresample = 10000))

	Approximative Permutation Transformation Score Test

data:  Polr(formula = y ~ x, method = "logistic")
Z = -14.807, p-value < 2.2e-16
alternative hypothesis: true  for xB is not equal to 0
95 percent confidence interval:
 1.654962 2.183131
sample estimates:
  for xB 
1.918773 

> trafo.test(y = y, x = x, inference = "PermScore", B = 10000)

	Semiparametric two-sample inference for proportional odds model

data:  
Z = 14.807, p-value < 2.2e-16
alternative hypothesis: true log-odds ratio is not equal to 0
95 percent confidence interval:
 1.659172 2.178500
sample estimates:
log-odds ratio 
      1.918877 

> 
> ci <- confint(m <- polr(y ~ x, method = "cloglog"))
Waiting for profiling to be done...

Re-fitting to get Hessian

> c(coef(m)["xB"], ci)
      xB    2.5 %   97.5 % 
1.427236 1.233706 1.626298 
> 
> m <- Polr(y ~ x, method = "cloglog")
> score_test(m, parm = "xB")

	Transformation Score Test

data:  Polr(formula = y ~ x, method = "cloglog")
Z = -15.414, p-value < 2.2e-16
alternative hypothesis: true  for xB is not equal to 0
95 percent confidence interval:
 1.231393 1.623076
sample estimates:
  for xB 
1.427215 

> 
> trafo.test(y = y, x = x, type = "Savage")

	Semiparametric two-sample inference for proportional hazard model

data:  
Wald Z = 14.262, p-value < 2.2e-16
alternative hypothesis: true log-hazard ratio is not equal to 0
95 percent confidence interval:
 1.231051 1.623325
sample estimates:
log-hazard ratio 
        1.427188 

> trafo.test(y = y, x = x, type = "Savage", inference = "MLScore")

	Semiparametric two-sample inference for proportional hazard model

data:  
Score Z = -15.414, p-value < 2.2e-16
alternative hypothesis: true log-hazard ratio is not equal to 0
95 percent confidence interval:
 1.231394 1.623048
sample estimates:
log-hazard ratio 
        1.427188 

> trafo.test(y = y, x = x, type = "Savage", inference = "PermScore", B = 10000)

	Semiparametric two-sample inference for proportional hazard model

data:  
Z = 14.922, p-value < 2.2e-16
alternative hypothesis: true log-hazard ratio is not equal to 0
95 percent confidence interval:
 1.230008 1.629307
sample estimates:
log-hazard ratio 
        1.427188 

> 
> ci <- confint(m <- polr(y ~ x, method = "loglog"))
Waiting for profiling to be done...

Re-fitting to get Hessian

> c(coef(m)["xB"], ci)
       xB     2.5 %    97.5 % 
1.0176118 0.8741336 1.1620036 
> 
> m <- Polr(y ~ x, method = "loglog")
> score_test(m, parm = "xB")

	Transformation Score Test

data:  Polr(formula = y ~ x, method = "loglog")
Z = -14.333, p-value < 2.2e-16
alternative hypothesis: true  for xB is not equal to 0
95 percent confidence interval:
 0.8738815 1.1614645
sample estimates:
  for xB 
1.017727 

> 
> trafo.test(y = y, x = x, type = "Lehmann")

	Semiparametric two-sample inference for Lehmann alternative

data:  
Wald Z = 13.862, p-value < 2.2e-16
alternative hypothesis: true log-reverse time hazard ratio is not equal to 0
95 percent confidence interval:
 0.8737927 1.1615668
sample estimates:
log-reverse time hazard ratio 
                      1.01768 

> trafo.test(y = y, x = x, type = "Lehmann", inference = "MLScore")

	Semiparametric two-sample inference for Lehmann alternative

data:  
Score Z = -14.333, p-value < 2.2e-16
alternative hypothesis: true log-reverse time hazard ratio is not equal to 0
95 percent confidence interval:
 0.8738818 1.1614646
sample estimates:
log-reverse time hazard ratio 
                      1.01768 

> trafo.test(y = y, x = x, type = "Lehmann", inference = "PermScore", B = 10000)

	Semiparametric two-sample inference for Lehmann alternative

data:  
Z = 13.243, p-value < 2.2e-16
alternative hypothesis: true log-reverse time hazard ratio is not equal to 0
95 percent confidence interval:
 0.8728982 1.1582317
sample estimates:
log-reverse time hazard ratio 
                      1.01768 

> 
> m <- Polr(y ~ x, method = "probit")
> score_test(m, parm = "xB")

	Transformation Score Test

data:  Polr(formula = y ~ x, method = "probit")
Z = -14.949, p-value < 2.2e-16
alternative hypothesis: true  for xB is not equal to 0
95 percent confidence interval:
 0.9825038 1.2803658
sample estimates:
  for xB 
1.131435 

> 
> trafo.test(y = y, x = x, type = "vdWaerden")

	Semiparametric two-sample inference for vdWaeren

data:  
Wald Z = 14.889, p-value < 2.2e-16
alternative hypothesis: true generalised Cohen's d is not equal to 0
95 percent confidence interval:
 0.9824897 1.2803772
sample estimates:
generalised Cohen's d 
             1.131433 

> trafo.test(y = y, x = x, type = "vdWaerden", inference = "MLScore")

	Semiparametric two-sample inference for vdWaeren

data:  
Score Z = -14.95, p-value < 2.2e-16
alternative hypothesis: true generalised Cohen's d is not equal to 0
95 percent confidence interval:
 0.9825198 1.2803520
sample estimates:
generalised Cohen's d 
             1.131433 

> trafo.test(y = y, x = x, type = "vdWaerden", inference = "PermScore", B = 10000)

	Semiparametric two-sample inference for vdWaeren

data:  
Z = 14.564, p-value < 2.2e-16
alternative hypothesis: true generalised Cohen's d is not equal to 0
95 percent confidence interval:
 0.9824174 1.2819916
sample estimates:
generalised Cohen's d 
             1.131433 

> 
> 
> m <- Polr(y ~ x, method = "cauchit")
> score_test(m, parm = "xB")

	Transformation Score Test

data:  Polr(formula = y ~ x, method = "cauchit")
Z = -14.548, p-value < 2.2e-16
alternative hypothesis: true  for xB is not equal to 0
95 percent confidence interval:
 1.405751 1.983649
sample estimates:
  for xB 
1.694711 

> 
> trafo.test(y = y, x = x, type = "Cauchy")

	Semiparametric two-sample inference for Cauchy

data:  
Wald Z = 11.425, p-value < 2.2e-16
alternative hypothesis: true good question is not equal to 0
95 percent confidence interval:
 1.403979 1.985450
sample estimates:
good question 
     1.694715 

> trafo.test(y = y, x = x, type = "Cauchy", inference = "MLScore")

	Semiparametric two-sample inference for Cauchy

data:  
Score Z = -14.548, p-value < 2.2e-16
alternative hypothesis: true good question is not equal to 0
95 percent confidence interval:
 1.405769 1.983629
sample estimates:
good question 
     1.694715 

> trafo.test(y = y, x = x, type = "Cauchy", inference = "PermScore", B = 10000)

	Semiparametric two-sample inference for Cauchy

data:  
Z = 14.326, p-value < 2.2e-16
alternative hypothesis: true good question is not equal to 0
95 percent confidence interval:
 1.407762 1.983357
sample estimates:
good question 
     1.694715 

> 
> 
> 
> proc.time()
   user  system elapsed 
  5.248   0.115   5.370 
