
R version 4.5.0 (2025-04-11) -- "How About a Twenty-Six"
Copyright (C) 2025 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> 
> library("lehmann")
> library("MASS")
> library("tram")
Loading required package: mlt
Loading required package: basefun
Loading required package: variables
Loading required package: mvtnorm
> library("coin")
Loading required package: survival

Attaching package: 'coin'

The following object is masked from 'package:variables':

    support

> 
> set.seed(29)
> 
> N <- 500
> x <- gl(2, N, labels = c("A", "B"))
> y <- rlogis(length(x), location = c(0, 2)[x])
> y <- cut(y, breaks = c(-Inf, -1, 0, 1, Inf), ordered = TRUE)
> 
> ci <- confint(m <- polr(y ~ x, method = "logistic"))
Waiting for profiling to be done...

Re-fitting to get Hessian

> c(coef(m)["xB"], ci)
      xB    2.5 %   97.5 % 
1.918767 1.661707 2.180632 
> #score_test(m, parm = "xB")
> 
> m <- Polr(y ~ x, method = "logistic")
> score_test(m, parm = "xB")

	Transformation Score Test

data:  Polr(formula = y ~ x, method = "logistic")
Z = -15.052, p-value < 2.2e-16
alternative hypothesis: true  for xB is not equal to 0
95 percent confidence interval:
 1.659583 2.177948
sample estimates:
  for xB 
1.918773 

> trafo.test(y = y, x = x)

	Binary two-sample Wald inference for proportional odds models

data:  x and y
Wald Z = 14.5, p-value < 2.2e-16
alternative hypothesis: true log-odds ratio is not equal to 0
95 percent confidence interval:
 1.659407 2.178134
sample estimates:
log-odds ratio  
        1.91877 

> trafo.test(y = y, x = x, inference = "MLScore")

	Binary two-sample score inference for proportional odds models

data:  x and y
Score Z = -15.052, p-value < 2.2e-16
alternative hypothesis: true log-odds ratio is not equal to 0
95 percent confidence interval:
 1.659583 2.177948
sample estimates:
log-odds ratio  
        1.91877 

> perm_test(m, parm = "xB", distribution = "asymptotic")

	Asymptotic Permutation Transformation Score Test

data:  Polr(formula = y ~ x, method = "logistic")
Z = -14.807, p-value < 2.2e-16
alternative hypothesis: true  for xB is not equal to 0
95 percent confidence interval:
 1.655087 2.182223
sample estimates:
  for xB 
1.918773 

> trafo.test(y = y, x = x, inference = "PermScore")

	Binary two-sample asymptotic permutation inference for proportional
	odds models

data:  x and y
Score Z = -15.052, p-value < 2.2e-16
alternative hypothesis: true log-odds ratio is not equal to 0
95 percent confidence interval:
 1.655303 2.182228
sample estimates:
log-odds ratio  
        1.91877 

> perm_test(m, parm = "xB", distribution = approximate(nresample = 10000))

	Approximative Permutation Transformation Score Test

data:  Polr(formula = y ~ x, method = "logistic")
Z = -14.807, p-value < 2.2e-16
alternative hypothesis: true  for xB is not equal to 0
95 percent confidence interval:
 1.654962 2.183131
sample estimates:
  for xB 
1.918773 

> trafo.test(y = y, x = x, inference = "PermScore", B = 10000)

	Binary two-sample approximate permutation inference for proportional
	odds models

data:  x and y
Score Z = -15.052, p-value < 2.2e-16
alternative hypothesis: true log-odds ratio is not equal to 0
95 percent confidence interval:
 1.654553 2.182774
sample estimates:
log-odds ratio  
        1.91877 

> 
> ci <- confint(m <- polr(y ~ x, method = "cloglog"))
Waiting for profiling to be done...

Re-fitting to get Hessian

> c(coef(m)["xB"], ci)
      xB    2.5 %   97.5 % 
1.427236 1.233706 1.626298 
> 
> m <- Polr(y ~ x, method = "cloglog")
> score_test(m, parm = "xB")

	Transformation Score Test

data:  Polr(formula = y ~ x, method = "cloglog")
Z = -15.414, p-value < 2.2e-16
alternative hypothesis: true  for xB is not equal to 0
95 percent confidence interval:
 1.231393 1.623076
sample estimates:
  for xB 
1.427215 

> 
> trafo.test(y = y, x = x, link = "cloglog")

	Binary two-sample Wald inference for proportional hazards models

data:  x and y
Wald Z = 14.262, p-value < 2.2e-16
alternative hypothesis: true log-hazard ratio is not equal to 0
95 percent confidence interval:
 1.231119 1.623396
sample estimates:
log-hazard ratio  
         1.427258 

> trafo.test(y = y, x = x, link = "cloglog", inference = "MLScore")

	Binary two-sample score inference for proportional hazards models

data:  x and y
Score Z = -15.414, p-value < 2.2e-16
alternative hypothesis: true log-hazard ratio is not equal to 0
95 percent confidence interval:
 1.231394 1.623048
sample estimates:
log-hazard ratio  
         1.427258 

> trafo.test(y = y, x = x, link = "cloglog", inference = "PermScore", B = 10000)

	Binary two-sample approximate permutation inference for proportional
	hazards models

data:  x and y
Score Z = -15.414, p-value < 2.2e-16
alternative hypothesis: true log-hazard ratio is not equal to 0
95 percent confidence interval:
 1.221480 1.629328
sample estimates:
log-hazard ratio  
         1.427258 

> 
> ci <- confint(m <- polr(y ~ x, method = "loglog"))
Waiting for profiling to be done...

Re-fitting to get Hessian

> c(coef(m)["xB"], ci)
       xB     2.5 %    97.5 % 
1.0176118 0.8741336 1.1620036 
> 
> m <- Polr(y ~ x, method = "loglog")
> score_test(m, parm = "xB")

	Transformation Score Test

data:  Polr(formula = y ~ x, method = "loglog")
Z = -14.333, p-value < 2.2e-16
alternative hypothesis: true  for xB is not equal to 0
95 percent confidence interval:
 0.8738815 1.1614645
sample estimates:
  for xB 
1.017727 

> 
> trafo.test(y = y, x = x, link = "loglog")

	Binary two-sample Wald inference for Lehmann alternative models

data:  x and y
Wald Z = 13.862, p-value < 2.2e-16
alternative hypothesis: true log-reverse time hazard ratio is not equal to 0
95 percent confidence interval:
 0.8737847 1.1615585
sample estimates:
log-reverse time hazard ratio  
                      1.017672 

> trafo.test(y = y, x = x, link = "loglog", inference = "MLScore")

	Binary two-sample score inference for Lehmann alternative models

data:  x and y
Score Z = -14.333, p-value < 2.2e-16
alternative hypothesis: true log-reverse time hazard ratio is not equal to 0
95 percent confidence interval:
 0.8738818 1.1614646
sample estimates:
log-reverse time hazard ratio  
                      1.017672 

> trafo.test(y = y, x = x, link = "loglog", inference = "PermScore", B = 10000)

	Binary two-sample approximate permutation inference for Lehmann
	alternative models

data:  x and y
Score Z = -14.333, p-value < 2.2e-16
alternative hypothesis: true log-reverse time hazard ratio is not equal to 0
95 percent confidence interval:
 0.8655243 1.1706970
sample estimates:
log-reverse time hazard ratio  
                      1.017672 

> 
> m <- Polr(y ~ x, method = "probit")
> score_test(m, parm = "xB")

	Transformation Score Test

data:  Polr(formula = y ~ x, method = "probit")
Z = -14.949, p-value < 2.2e-16
alternative hypothesis: true  for xB is not equal to 0
95 percent confidence interval:
 0.9825038 1.2803658
sample estimates:
  for xB 
1.131435 

> 
> trafo.test(y = y, x = x, link = "probit")

	Binary two-sample Wald inference for vdWaeren models

data:  x and y
Wald Z = 14.888, p-value < 2.2e-16
alternative hypothesis: true generalised Cohen's d is not equal to 0
95 percent confidence interval:
 0.9824566 1.2803432
sample estimates:
generalised Cohen's d  
                1.1314 

> trafo.test(y = y, x = x, link = "probit", inference = "MLScore")

	Binary two-sample score inference for vdWaeren models

data:  x and y
Score Z = -14.95, p-value < 2.2e-16
alternative hypothesis: true generalised Cohen's d is not equal to 0
95 percent confidence interval:
 0.9825198 1.2803520
sample estimates:
generalised Cohen's d  
                1.1314 

> trafo.test(y = y, x = x, link = "probit", inference = "PermScore", B = 10000)

	Binary two-sample approximate permutation inference for vdWaeren models

data:  x and y
Score Z = -14.95, p-value < 2.2e-16
alternative hypothesis: true generalised Cohen's d is not equal to 0
95 percent confidence interval:
 0.9787783 1.2833000
sample estimates:
generalised Cohen's d  
                1.1314 

> 
> proc.time()
   user  system elapsed 
  4.392   0.035   4.425 
