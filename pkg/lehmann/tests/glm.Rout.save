
R version 4.4.3 (2025-02-28) -- "Trophy Case"
Copyright (C) 2025 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> 
> library("lehmann")
> 
> set.seed(29)
> 
> N <- 500
> x <- gl(2, N, labels = c("A", "B"))
> y <- rlogis(length(x), location = c(0, 2)[x])
> y <- factor(y < 0)
> 
> ci <- confint(m <- glm(y ~ x, family = binomial()))
Waiting for profiling to be done...
> c(coef(m)["xB"], ci["xB",])
       xB     2.5 %    97.5 % 
-1.862398 -2.171654 -1.563040 
> 
> trafo.test(y = y, x = x)

	Semiparametric two-sample inference for proportional odds model

data:  
Wald Z = -12.007, p-value < 2.2e-16
alternative hypothesis: true log-odds ratio is not equal to 0
95 percent confidence interval:
 -2.166408 -1.558389
sample estimates:
log-odds ratio 
     -1.862398 

> trafo.test(y = y, x = x, inference = "MLScore")

	Semiparametric two-sample inference for proportional odds model

data:  
Score Z = 12.663, p-value < 2.2e-16
alternative hypothesis: true log-odds ratio is not equal to 0
95 percent confidence interval:
 -2.165826 -1.558913
sample estimates:
log-odds ratio 
     -1.862398 

> trafo.test(y = y, x = x, inference = "PermScore", B = 10000)

	Semiparametric two-sample inference for proportional odds model

data:  
Z = -12.656, p-value < 2.2e-16
alternative hypothesis: true log-odds ratio is not equal to 0
95 percent confidence interval:
 -2.163055 -1.561687
sample estimates:
log-odds ratio 
     -1.862398 

> 
> ci <- confint(m <- glm(y ~ x, family = binomial(link = "cloglog")))
Waiting for profiling to be done...
> c(coef(m)["xB"], ci["xB",])
       xB     2.5 %    97.5 % 
-1.548323 -1.815917 -1.293276 
> 
> trafo.test(y = y, x = x, type = "Savage")

	Semiparametric two-sample inference for proportional hazard model

data:  
Wald Z = -12.59, p-value < 2.2e-16
alternative hypothesis: true log-hazard ratio is not equal to 0
95 percent confidence interval:
 -1.2608795 -0.9211831
sample estimates:
log-hazard ratio 
       -1.091031 

> trafo.test(y = y, x = x, type = "Savage", inference = "MLScore")

	Semiparametric two-sample inference for proportional hazard model

data:  
Score Z = 13.017, p-value < 2.2e-16
alternative hypothesis: true log-hazard ratio is not equal to 0
95 percent confidence interval:
 -1.2607445 -0.9213172
sample estimates:
log-hazard ratio 
       -1.091031 

> trafo.test(y = y, x = x, type = "Savage", inference = "PermScore", B = 10000)

	Semiparametric two-sample inference for proportional hazard model

data:  
Z = -12.656, p-value < 2.2e-16
alternative hypothesis: true log-hazard ratio is not equal to 0
95 percent confidence interval:
 -1.259191 -0.922871
sample estimates:
log-hazard ratio 
       -1.091031 

> 
> y <- relevel(y, levels(y)[2])
> ci <- confint(m <- glm(y ~ x, family = binomial(link = "cloglog")))
Waiting for profiling to be done...
> c(coef(m)["xB"], ci["xB",])
       xB     2.5 %    97.5 % 
1.0910314 0.9222621 1.2620976 
> 
> trafo.test(y = y, x = x, type = "Lehmann")

	Semiparametric two-sample inference for Lehmann alternative

data:  
Wald Z = 12.59, p-value < 2.2e-16
alternative hypothesis: true log-reverse time hazard ratio is not equal to 0
95 percent confidence interval:
 0.9211831 1.2608795
sample estimates:
log-reverse time hazard ratio 
                     1.091031 

> trafo.test(y = y, x = x, type = "Lehmann", inference = "MLScore")

	Semiparametric two-sample inference for Lehmann alternative

data:  
Score Z = -13.017, p-value < 2.2e-16
alternative hypothesis: true log-reverse time hazard ratio is not equal to 0
95 percent confidence interval:
 0.9213172 1.2607446
sample estimates:
log-reverse time hazard ratio 
                     1.091031 

> trafo.test(y = y, x = x, type = "Lehmann", inference = "PermScore", B = 10000)

	Semiparametric two-sample inference for Lehmann alternative

data:  
Z = 12.656, p-value < 2.2e-16
alternative hypothesis: true log-reverse time hazard ratio is not equal to 0
95 percent confidence interval:
 0.922871 1.259191
sample estimates:
log-reverse time hazard ratio 
                     1.091031 

> 
> ci <- confint(m <- glm(y ~ x, family = binomial(link = "cauchit")))
Waiting for profiling to be done...
> c(coef(m)["xB"], ci["xB",])
      xB    2.5 %   97.5 % 
2.100667 1.641375 2.689563 
> 
> trafo.test(y = y, x = x, type = "Cauchy")

	Semiparametric two-sample inference for Cauchy

data:  
Wald Z = 7.9958, p-value = 1.288e-15
alternative hypothesis: true good question is not equal to 0
95 percent confidence interval:
 1.585740 2.615594
sample estimates:
good question 
     2.100667 

> trafo.test(y = y, x = x, type = "Cauchy", inference = "MLScore")

	Semiparametric two-sample inference for Cauchy

data:  
Score Z = -13.799, p-value < 2.2e-16
alternative hypothesis: true good question is not equal to 0
95 percent confidence interval:
 1.599063 2.601887
sample estimates:
good question 
     2.100667 

> trafo.test(y = y, x = x, type = "Cauchy", inference = "PermScore", B = 10000)

	Semiparametric two-sample inference for Cauchy

data:  
Z = 12.656, p-value < 2.2e-16
alternative hypothesis: true good question is not equal to 0
95 percent confidence interval:
 1.603435 2.597529
sample estimates:
good question 
     2.100667 

> 
> proc.time()
   user  system elapsed 
  1.160   0.047   1.203 
